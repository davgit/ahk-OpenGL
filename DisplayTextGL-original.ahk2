#SingleInstance, Force

    Width := 800
    Height := 600
    Lines := ["1340 <Acuena> dunnu how to check that??"
    , "1340 <Worm002> wiggly worm"
    , "1340 <Acuena> msgbox it?"
    , "1341 <Uberi> yep"
    , "1341 <Uberi> MsgBox `% A_EventInfo"
    , "1341 <Uberi> before that line"]
    
    Gosub, Initialize
    OnExit, ExitSub
    SetTimer, Update, 30
Return

Initialize:
    hGDI32 := DllCall("LoadLibrary","Str","gdi32")
    gl := new OpenGL()
    
    Gui, +LastFound +Resize +MinSize150x150
    hWindow := WinExist()
    
    hDC := DllCall("GetDC","UInt",hWindow)
    VarSetCapacity(Struct,40,0)
        NumPut(40  ,Struct, 0,"UShort")
        NumPut(1   ,Struct, 2,"UShort")
        NumPut(0x25,Struct, 4,"UInt") ;PFD_DRAW_TO_WINDOW | PFD_SUPPORT_OPENGL | PFD_DOUBLEBUFFER
        NumPut(0   ,Struct, 8,"UChar") ;PFD_TYPE_RGBA
        NumPut(24  ,Struct, 9,"UChar") ;Color bit depth
        NumPut(16  ,Struct,23,"UChar") ;Depth buffer bit depth
    DllCall("gdi32\SetPixelFormat","UInt",hDC,"Int",DllCall("gdi32\ChoosePixelFormat","UInt",hDC,"ptr",&Struct,"Int"),"ptr",&Struct)
    hRC := gl.wglCreateContext(hDC)
    gl.wglMakeCurrent(hDC, hRC)
    
    gl.glShadeModel(0x1D01) ;GL_SMOOTH
    gl.glClearColor(0.0, 0.0, 0.0, 0.0)
    gl.glClearDepth(1.0)
    gl.glEnable(0xB71) ;GL_DEPTH_TEST
    gl.glDepthFunc(0x201) ;GL_LESS
    gl.glHint(0xC50, 0x1102) ;GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST
    gl.glEnable(0x803A) ;GL_RESCALE_NORMAL
    gl.glPolygonMode(0x408, 0x1B02) ;GL_FRONT_AND_BACK, GL_FILL
    
    gl.glEnable(0xB50) ;GL_LIGHTING
    gl.glEnable(0x4000) ;GL_LIGHT0
    ;gl.glEnable(0x0B20) ;GL_LINE_SMOOTH
    ;gl.glEnable(0x0BE2) ;GL_BLEND
    
    VarSetCapacity(Struct,16)
        NumPut(1,Struct,0,"Float")
        NumPut(1,Struct,4,"Float")
        NumPut(1,Struct,8,"Float")
        NumPut(1,Struct,12,"Float") ;light with color 1,1,1
    DllCall("opengl32\glLightfv","UInt",0x4000,"UInt",0x1200,"ptr",&Struct) ;GL_LIGHT0, GL_AMBIENT
    
        NumPut(1,Struct,0,"Float")
        NumPut(1,Struct,4,"Float")
        NumPut(1,Struct,8,"Float")
        NumPut(1,Struct,12,"Float")
    DllCall("opengl32\glLightfv","UInt",0x4000,"UInt",0x1201,"ptr",&Struct) ;GL_LIGHT0, GL_DIFFUSE
    
        NumPut(Temp1,Struct,0,"Float")
        NumPut(Temp2,Struct,4,"Float")
        NumPut(Temp3,Struct,8,"Float")
        NumPut(Temp4,Struct,12,"Float")
    DllCall("opengl32\glLightfv","UInt",0x4000,"UInt",0x1202,"ptr",&Struct) ;GL_LIGHT0, GL_SPECULAR
    
        NumPut(0,Struct,0,"Float")
        NumPut(0,Struct,4,"Float")
        NumPut(0,Struct,8,"Float")
        NumPut(1,Struct,12,"Float") ;positional light at 0,0,0
    DllCall("opengl32\glLightfv","UInt",0x4000,"UInt",0x1203,"ptr",&Struct) ;GL_LIGHT0, GL_POSITION
    DllCall("opengl32\glLightf","UInt",0x4000,"UInt",0x1208,"Float",0.01) ;GL_LIGHT0, GL_LINEAR_ATTENUATION

    FontList := DllCall("opengl32\glGenLists","Int",256)
    hFont := DllCall("CreateFont","Int",-16,"Int",0,"Int",0,"Int",0,"Int",100,"UInt",0,"UInt",0,"UInt",0,"UInt",0,"UInt",4,"UInt",0,"UInt",4,"UInt",0,"Str","Arial")
    hTempFont := DllCall("SelectObject","UInt",hDC,"UInt",hFont)
    
    VarSetCapacity(GlyphMetrics,6144,0) ;256 * 24
    DllCall("opengl32\wglUseFontOutlines" . (A_IsUnicode ? "W" : "A"),"UInt",hDC,"UInt",0,"UInt",256,"UInt",FontList,"Float",0,"Float",0.1,"Int",1,UPtr,&GlyphMetrics)
    
    DllCall("SelectObject","UInt",hDC,"UInt",hTempFont)
    DllCall("DeleteObject","UInt",hFont)
    TextType := A_IsUnicode ? 0x1403 : 0x1401 ;GL_UNSIGNED_SHORT, GL_UNSIGNED_BYTE
    DllCall("opengl32\glListBase","UInt",FontList)
    
    VerticalPosition := -2
    HorizontalPosition := -6.2
    Angle := -25
    newlinepos := 0
    scale := 1
    
    Gui, Show, w%Width% h%Height%, 3D Scroller
Return

Update:
    DllCall("opengl32\glClear","UInt",0x4100) ;GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT
    DllCall("opengl32\glLoadIdentity")
    ;DllCall("opengl32\glScalef","Float", scale,"Float", scale,"Float", scale)
    DllCall("opengl32\glRotatef","Float", Angle, "Float", 1.0, "Float", 0.0, "Float", 0.0)
    DllCall("opengl32\glTranslatef", "Float", HorizontalPosition, "Float", VerticalPosition + newlinepos, "Float", -10)
    
    if round(newlinepos, 2)
        newlinepos := newlinepos + 0.1
    
    loop % lines._maxindex()
    {
        line := lines[lines._maxindex() - (A_Index - 1)]
        DllCall("opengl32\glPushMatrix")
        DllCall("opengl32\glCallLists", "Int", StrLen(line), "UInt", TextType, "ptr", &line)
        DllCall("opengl32\glPopMatrix")
        DllCall("opengl32\glTranslatef", "Float", 0, "Float", 1, "Float", 0)
    }
    
    DllCall("gdi32\SwapBuffers","UInt",hDC)
return

ResizeScene(PosX,PosY,Width,Height,FieldOfView := 45.0,ClipNear := 0.5,ClipFar := 100.0)
{
    DllCall("opengl32\glViewport","Int",PosX,"Int",PosY,"Int",Width,"Int",Height)
    DllCall("opengl32\glMatrixMode","UInt",0x1701) ;GL_PROJECTION
    DllCall("opengl32\glLoadIdentity")
    MaxY := ClipNear * Tan(FieldOfView * 0.00872664626)
    MaxX := MaxY * (Width / Height)
    DllCall("opengl32\glFrustum","Double",0 - MaxX,"Double",MaxX,"Double",0 - MaxY,"Double",MaxY,"Double",ClipNear,"Double",ClipFar)
    DllCall("opengl32\glMatrixMode","UInt",0x1700) ;GL_MODELVIEW
}

GuiSize:
    Width := A_GuiWidth ? A_GuiWidth : 1, Height := A_GuiHeight ? A_GuiHeight : 1
    ResizeScene(0,0,Width,Height,55.0,0.5,Width / 4)
return

GuiClose:
ExitApp

ExitSub:
    DllCall("opengl32\glDeleteLists","UInt",FontList,"Int",256)
    DllCall("opengl32\wglMakeCurrent","UInt",0,"UInt",0)
    DllCall("opengl32\wglDeleteContext","UInt",hRC)
    DllCall("FreeLibrary","UInt",hOpenGL32)
    DllCall("FreeLibrary","UInt",hGDI32)
ExitApp

#IfWinActive 3D Scroller

Up::VerticalPosition += 1
Down::VerticalPosition -= 1

!Up::VerticalPosition += 0.1
!Down::VerticalPosition -= 0.1

+Up::Angle++
+Down::Angle--

Right::HorizontalPosition++
Left::HorizontalPosition--
!Right::HorizontalPosition += 0.1
!Left::HorizontalPosition -= 0.1

F12::
    newlinepos := 0
    newline := ""
    InputBox, newline
    lines.insert(newline)
    newlinepos -= 1
return

+F12::lines.remove(1)

#Include OpenGL.ahk2